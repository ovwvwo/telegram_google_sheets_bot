import logging
from datetime import datetime
from telegram import Update, ReplyKeyboardMarkup, ReplyKeyboardRemove
from telegram.ext import (
    Updater, 
    CommandHandler, 
    MessageHandler, 
    Filters, 
    CallbackContext,
    ConversationHandler
)
import gspread
from oauth2client.service_account import ServiceAccountCredentials
from typing import Dict, List
import threading
import time

# –ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã –¥–ª—è —Å–æ—Å—Ç–æ—è–Ω–∏–π —Ä–∞–∑–≥–æ–≤–æ—Ä–∞
CHOOSING_ACTION, ADDING_DATA, SEARCHING_DATA = range(3)

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
logging.basicConfig(
    format='%(asctime)s - %(name)s - %(levelname)s - %(message)s', 
    level=logging.INFO
)
logger = logging.getLogger(__name__)

class GoogleSheetsBot:
    def __init__(self, credentials_path: str, spreadsheet_name: str):
        # –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –¥–æ—Å—Ç—É–ø–∞ –∫ Google Sheets
        self.credentials_path = credentials_path
        self.spreadsheet_name = spreadsheet_name
        self.setup_google_sheets()
        
        # –•—Ä–∞–Ω–µ–Ω–∏–µ –ø–æ–¥–ø–∏—Å—á–∏–∫–æ–≤ –Ω–∞ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è
        self.subscribers = set()
        self.last_row_count = len(self.sheet.get_all_values())
        
        # –ó–∞–ø—É—Å–∫ –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏—è –∏–∑–º–µ–Ω–µ–Ω–∏–π
        self.should_track = True
        self.tracking_thread = threading.Thread(target=self.track_changes)
        self.tracking_thread.daemon = True
        self.tracking_thread.start()
        
        self.reply_keyboard = [
            ['–î–æ–±–∞–≤–∏—Ç—å –∑–∞–ø–∏—Å—å', '–ü–æ–∏—Å–∫ –∑–∞–ø–∏—Å–∏'],
            ['–ü–æ–∫–∞–∑–∞—Ç—å –ø–æ—Å–ª–µ–¥–Ω–∏–µ –∑–∞–ø–∏—Å–∏', '–ü–æ–¥–ø–∏—Å–∞—Ç—å—Å—è –Ω–∞ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è'],
            ['–û—Ç–ø–∏—Å–∞—Ç—å—Å—è –æ—Ç —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π', '–ü–æ–º–æ—â—å']
        ]
        self.markup = ReplyKeyboardMarkup(self.reply_keyboard, one_time_keyboard=True)

    def setup_google_sheets(self):
        """–ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ Google Sheets"""
        scope = [
            "https://spreadsheets.google.com/feeds",
            "https://www.googleapis.com/auth/drive"
        ]
        creds = ServiceAccountCredentials.from_json_keyfile_name(self.credentials_path, scope)
        self.client = gspread.authorize(creds)
        self.sheet = self.client.open(self.spreadsheet_name).sheet1

    def refresh_google_sheets(self):
        """–û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ Google Sheets"""
        try:
            self.setup_google_sheets()
        except Exception as e:
            logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è: {e}")

    def track_changes(self):
        """–û—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏–µ –∏–∑–º–µ–Ω–µ–Ω–∏–π –≤ —Ç–∞–±–ª–∏—Ü–µ"""
        while self.should_track:
            try:
                current_row_count = len(self.sheet.get_all_values())
                
                if current_row_count > self.last_row_count:
                    # –ü–æ–ª—É—á–∞–µ–º –Ω–æ–≤—ã–µ —Å—Ç—Ä–æ–∫–∏
                    new_rows = self.sheet.get_all_values()[self.last_row_count:]
                    
                    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –ø–æ–¥–ø–∏—Å—á–∏–∫–∞–º
                    for chat_id in self.subscribers:
                        message = "üîî –ù–æ–≤—ã–µ –∑–∞–ø–∏—Å–∏ –≤ —Ç–∞–±–ª–∏—Ü–µ:\n\n"
                        for row in new_rows:
                            message += f"–î–∞—Ç–∞: {row[0]}\n"
                            message += f"–ò–º—è: {row[1]}\n"
                            message += f"Email: {row[2]}\n"
                            message += f"–¢–µ–ª–µ—Ñ–æ–Ω: {row[3]}\n\n"
                        
                        context = self.updater.dispatcher.bot_data['callback_context']
                        context.bot.send_message(chat_id=chat_id, text=message)
                
                self.last_row_count = current_row_count
                
                # –û–±–Ω–æ–≤–ª—è–µ–º –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫–∞–∂–¥—ã–µ 30 –º–∏–Ω—É—Ç
                self.refresh_google_sheets()
                
                time.sleep(30)  # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–∞–∂–¥—ã–µ 30 —Å–µ–∫—É–Ω–¥
                
            except Exception as e:
                logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏–∏ –∏–∑–º–µ–Ω–µ–Ω–∏–π: {e}")
                time.sleep(60)  # –ï—Å–ª–∏ –ø—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞, –∂–¥–µ–º –º–∏–Ω—É—Ç—É –ø–µ—Ä–µ–¥ –ø–æ–≤—Ç–æ—Ä–Ω–æ–π –ø–æ–ø—ã—Ç–∫–æ–π

    def subscribe(self, update: Update, context: CallbackContext) -> int:
        """–ü–æ–¥–ø–∏—Å–∫–∞ –Ω–∞ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è"""
        chat_id = update.effective_chat.id
        if chat_id not in self.subscribers:
            self.subscribers.add(chat_id)
            update.message.reply_text(
                '‚úÖ –í—ã —É—Å–ø–µ—à–Ω–æ –ø–æ–¥–ø–∏—Å–∞–ª–∏—Å—å –Ω–∞ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è!',
                reply_markup=self.markup
            )
        else:
            update.message.reply_text(
                '–í—ã —É–∂–µ –ø–æ–¥–ø–∏—Å–∞–Ω—ã –Ω–∞ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è.',
                reply_markup=self.markup
            )
        return CHOOSING_ACTION

    def unsubscribe(self, update: Update, context: CallbackContext) -> int:
        """–û—Ç–ø–∏—Å–∫–∞ –æ—Ç —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π"""
        chat_id = update.effective_chat.id
        if chat_id in self.subscribers:
            self.subscribers.remove(chat_id)
            update.message.reply_text(
                '‚úÖ –í—ã —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø–∏—Å–∞–ª–∏—Å—å –æ—Ç —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π.',
                reply_markup=self.markup
            )
        else:
            update.message.reply_text(
                '–í—ã –Ω–µ –±—ã–ª–∏ –ø–æ–¥–ø–∏—Å–∞–Ω—ã –Ω–∞ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è.',
                reply_markup=self.markup
            )
        return CHOOSING_ACTION

    def start(self, update: Update, context: CallbackContext) -> int:
        """–ù–∞—á–∞–ª–æ —Ä–∞–∑–≥–æ–≤–æ—Ä–∞ –∏ –ø–æ–∫–∞–∑ –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã —Å –¥–µ–π—Å—Ç–≤–∏—è–º–∏"""
        update.message.reply_text(
            '–ü—Ä–∏–≤–µ—Ç! –Ø –±–æ—Ç –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å Google Sheets.\n'
            '–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:',
            reply_markup=self.markup
        )
        return CHOOSING_ACTION

    # ... (–æ—Å—Ç–∞–ª—å–Ω—ã–µ –º–µ—Ç–æ–¥—ã –æ—Å—Ç–∞—é—Ç—Å—è –±–µ–∑ –∏–∑–º–µ–Ω–µ–Ω–∏–π)

    def help_command(self, update: Update, context: CallbackContext) -> int:
        """–ü–æ–∫–∞–∑–∞—Ç—å —Å–ø—Ä–∞–≤–∫—É"""
        update.message.reply_text(
            '–î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:\n\n'
            '/start - –ù–∞—á–∞—Ç—å —Ä–∞–±–æ—Ç—É —Å –±–æ—Ç–æ–º\n'
            '–î–æ–±–∞–≤–∏—Ç—å –∑–∞–ø–∏—Å—å - –î–æ–±–∞–≤–∏—Ç—å –Ω–æ–≤—É—é –∑–∞–ø–∏—Å—å –≤ —Ç–∞–±–ª–∏—Ü—É\n'
            '–ü–æ–∏—Å–∫ –∑–∞–ø–∏—Å–∏ - –ù–∞–π—Ç–∏ —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–µ –∑–∞–ø–∏—Å–∏\n'
            '–ü–æ–∫–∞–∑–∞—Ç—å –ø–æ—Å–ª–µ–¥–Ω–∏–µ –∑–∞–ø–∏—Å–∏ - –ü–æ–∫–∞–∑–∞—Ç—å 5 –ø–æ—Å–ª–µ–¥–Ω–∏—Ö –∑–∞–ø–∏—Å–µ–π\n'
            '–ü–æ–¥–ø–∏—Å–∞—Ç—å—Å—è –Ω–∞ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è - –ü–æ–ª—É—á–∞—Ç—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ –Ω–æ–≤—ã—Ö –∑–∞–ø–∏—Å—è—Ö\n'
            '–û—Ç–ø–∏—Å–∞—Ç—å—Å—è –æ—Ç —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π - –ü—Ä–µ–∫—Ä–∞—Ç–∏—Ç—å –ø–æ–ª—É—á–∞—Ç—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è\n'
            '–ü–æ–º–æ—â—å - –ü–æ–∫–∞–∑–∞—Ç—å —ç—Ç–æ —Å–æ–æ–±—â–µ–Ω–∏–µ',
            reply_markup=self.markup
        )
        return CHOOSING_ACTION

def main():
    # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –±–æ—Ç–∞
    bot = GoogleSheetsBot('credentials.json', '–ù–∞–∑–≤–∞–Ω–∏–µ –≤–∞—à–µ–π —Ç–∞–±–ª–∏—Ü—ã')
    
    # –°–æ–∑–¥–∞–Ω–∏–µ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–π
    updater = Updater("–í–ê–®_–¢–û–ö–ï–ù_–ë–û–¢–ê")
    bot.updater = updater  # –°–æ—Ö—Ä–∞–Ω—è–µ–º updater –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π
    dispatcher = updater.dispatcher

    # –°–æ—Ö—Ä–∞–Ω—è–µ–º –∫–æ–Ω—Ç–µ–∫—Å—Ç –¥–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –≤ —Ç—Ä–µ–¥–µ –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏—è
    dispatcher.bot_data['callback_context'] = CallbackContext(dispatcher)

    # –°–æ–∑–¥–∞–Ω–∏–µ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∞ —Ä–∞–∑–≥–æ–≤–æ—Ä–∞
    conv_handler = ConversationHandler(
        entry_points=[CommandHandler('start', bot.start)],
        states={
            CHOOSING_ACTION: [
                MessageHandler(Filters.regex('^–î–æ–±–∞–≤–∏—Ç—å –∑–∞–ø–∏—Å—å$'), bot.add_data),
                MessageHandler(Filters.regex('^–ü–æ–∏—Å–∫ –∑–∞–ø–∏—Å–∏$'), bot.search_data),
                MessageHandler(Filters.regex('^–ü–æ–∫–∞–∑–∞—Ç—å –ø–æ—Å–ª–µ–¥–Ω–∏–µ –∑–∞–ø–∏—Å–∏$'), bot.show_recent),
                MessageHandler(Filters.regex('^–ü–æ–¥–ø–∏—Å–∞—Ç—å—Å—è –Ω–∞ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è$'), bot.subscribe),
                MessageHandler(Filters.regex('^–û—Ç–ø–∏—Å–∞—Ç—å—Å—è –æ—Ç —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π$'), bot.unsubscribe),
                MessageHandler(Filters.regex('^–ü–æ–º–æ—â—å$'), bot.help_command),
            ],
            ADDING_DATA: [
                MessageHandler(Filters.text & ~Filters.command, bot.save_data)
            ],
            SEARCHING_DATA: [
                MessageHandler(Filters.text & ~Filters.command, bot.perform_search)
            ]
        },
        fallbacks=[CommandHandler('cancel', bot.cancel)]
    )

    dispatcher.add_handler(conv_handler)

    # –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞
    updater.start_polling()
    updater.idle()

if __name__ == '__main__':
    main()
